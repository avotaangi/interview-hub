version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: interview-hub-container
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_DB: ${PG_DB_NAME}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog-container
    ports:
      - "8025:8025"
    environment:
      MH_STORAGE: "maildir"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-container
    command: celery -A InterviewHub worker --loglevel=info
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_HOST=db
      - PG_PORT=${PG_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
    volumes:
      - .:/app

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-beat-container
    command: celery -A InterviewHub beat --loglevel=info
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_HOST=db
      - PG_PORT=${PG_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
    volumes:
      - .:/app

volumes:
  postgres_data:
